<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSaveExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAL4AAAA2CAIAAAD29bR/AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAKvSURBVHhe7Zsxa9tQFEb7xztm7Ji1YxdDyOQlUDyk
        JZBQPLQllEADJQTawUMogXZQr9/3eDxf+anmQgvWO5dDkK6ulEEHfbYkv3i5WgAEQB0IgjoQBHUgCOpA
        ENSBIKgDQVAHgqAOBEEdCII6EGRW6rxerw5Bw6c3F3Xz5PK8HKfw6mpZBmxeTZssTcNm3ORf2fu/jo5Z
        qTMcVhr+8Hif11Od3V6X4xQenzZ58zDYvJp27nMr1dv7T9a0v3n9gLIj6FBHTb/qvPn4Lq+nKmYU7EKS
        t6WyefVRR/SrjvH8+1duDYMtl75Y3q3ztt2tqCO6VsdlVrmuiL1pZaCOmK06Xzff3dYxE5nVSitjrzoO
        Z9I8XHF0rY7RyqxWWhmoI3pXp5VZrbQyUEf0rs7pzUXeIZUscWlV7ugI1BG9q2Nsnn/mfYbBlq1Tp5U6
        NagjUGfx/tuXvE8qu8bUaWVb3TzqCNTxmfX5x0NeSuXSykAdgTpb6syqa5xWBuqI2apjoWMnzNF67ugy
        q9Q4rQw7Tt6cCnXmQD5R7WqdQpdZpcZpZaCOQJ1MfW9Q5e4EFlBHoM4WrjoBUGcLn3UCzFYdvmH9a1DH
        p5XtmJdSjTMLdQTq7KSVfaV3b2KMMwt1BOrspNXybn1yeZ5XUo0zC3VE7+q4tNLPG6afRaCO6F0dl1Zq
        nt1e51Yql1moI3pXx6WVmtOZhTqia3WcBEor4TKrPveoI7pWp367tKSVcJlVv2OKOmK26kxUma+fW7kP
        NC6z6udZqCP6Vcfdvxnf+nOZVd54Rx3Rrzp1Wu194NDKLNQR/aozkVailVmoI2aljp2hQ7BJ06Lu2Gp9
        nEI9U8bcvvX3soI165nW8Y+aWakD/xPUgSCoA0FQB4KgDgRBHQiCOhAEdSAI6kAQ1IEgqAMhVos/tlwB
        +3hXrnwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="LabelLetter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BoAUogEghWgASCEaAFKORDT0/3ElGsDhQDQApBANAClEA0BKiEb8v8cTDQBjRz0aG/9LxsG/CeAAEQ0A
        KUQDQArRAJBCNACkEA0AKUQDQEoqGpeJBvDQIxoAUogGgJSjHg0eIwe2jGgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        SCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgASCEaAFKIBoAUogEghWgA
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>